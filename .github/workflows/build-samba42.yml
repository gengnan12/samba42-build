name: Build Samba 4 for ARMv7 (Verified Links)

on:
  workflow_dispatch:

jobs:
  build-samba:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install basic tools
        run: |
          echo "===== 安装基础工具 ====="
          sudo apt update
          sudo apt install -y \
            build-essential \
            gcc-arm-linux-gnueabihf \
            g++-arm-linux-gnueabihf \
            wget tar xz-utils make \
            python3 python3-dev \
            pkg-config \
            curl

      - name: Build zlib from source
        run: |
          echo "===== 编译zlib ====="
          # 主链接
          wget https://zlib.net/zlib-1.2.13.tar.gz || \
          # 备用链接
          wget https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz
          
          tar -xzf zlib-1.2.13.tar.gz
          cd zlib-1.2.13
          CC=arm-linux-gnueabihf-gcc ./configure --prefix=/opt/arm-deps --static
          make -j$(nproc)
          sudo make install
          cd ..

      - name: Build OpenSSL from source
        run: |
          echo "===== 编译OpenSSL ====="
          # 主链接
          wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz || \
          # 备用链接
          wget https://github.com/openssl/openssl/releases/download/OpenSSL_1_1_1w/openssl-1.1.1w.tar.gz || \
          # 第二个备用链接
          wget https://www.openssl.org/source/old/1.1.1/openssl-1.1.1w.tar.gz
          
          tar -xzf openssl-1.1.1w.tar.gz
          cd openssl-1.1.1w
          ./Configure linux-armv4 -march=armv7-a -mfpu=neon -mfloat-abi=hard \
            --prefix=/opt/arm-deps no-shared no-dso
          make -j$(nproc)
          sudo make install
          cd ..

      - name: Build GnuTLS from source
        run: |
          echo "===== 编译GnuTLS ====="
          # 尝试多个版本
          versions=("3.7.0" "3.6.16" "3.6.15")
          for version in "${versions[@]}"; do
            if wget "https://www.gnupg.org/ftp/gcrypt/gnutls/v${version%.*}/gnutls-${version}.tar.xz"; then
              echo "成功下载GnuTLS ${version}"
              break
            fi
          done
          
          tar -xJf gnutls-*.tar.xz
          cd gnutls-*
          ./configure \
            --host=arm-linux-gnueabihf \
            --prefix=/opt/arm-deps \
            --with-libz-prefix=/opt/arm-deps \
            --with-included-libtasn1 \
            --with-included-unistring \
            --without-p11-kit \
            --disable-doc \
            --disable-tests \
            --enable-static \
            --disable-shared \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os -I/opt/arm-deps/include" \
            LDFLAGS="-L/opt/arm-deps/lib -static"
          make -j$(nproc)
          sudo make install
          cd ..

      - name: Download and compile Samba
        run: |
          echo "===== 下载和编译Samba ====="
          # 尝试多个Samba版本
          versions=("4.9.5" "4.9.4" "4.9.3" "4.9.2" "4.9.1" "4.9.0" "4.8.12" "4.8.0")
          for version in "${versions[@]}"; do
            if wget "https://download.samba.org/pub/samba/stable/samba-${version}.tar.gz"; then
              echo "成功下载Samba ${version}"
              SAMBA_VERSION="${version}"
              break
            fi
          done
          
          tar -xzf samba-${SAMBA_VERSION}.tar.gz
          cd samba-${SAMBA_VERSION}

          export PKG_CONFIG_PATH="/opt/arm-deps/lib/pkgconfig"
          export CC="arm-linux-gnueabihf-gcc"
          export CXX="arm-linux-gnueabihf-g++"
          export CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os -I/opt/arm-deps/include"
          export LDFLAGS="-L/opt/arm-deps/lib -static -lssl -lcrypto -lz"

          ./configure \
            --host=arm-linux-gnueabihf \
            --prefix=/usr \
            --sysconfdir=/etc/samba \
            --localstatedir=/var \
            --disable-python \
            --without-ldap \
            --without-ad-dc \
            --without-systemd \
            --without-winbind \
            --with-gnutls=/opt/arm-deps \
            --with-zlib=/opt/arm-deps \
            --enable-static \
            --disable-shared

          make -j$(nproc) all

      - name: Create deployment package
        run: |
          echo "===== 创建部署包 ====="
          # 自动检测Samba版本
          SAMBA_DIR=$(ls -d samba-* | head -1)
          mkdir -p samba-deploy
          cd ${SAMBA_DIR}/bin
          
          cp smbd nmbd smbpasswd ../../samba-deploy/
          
          # 创建安装脚本
          cat > ../../samba-deploy/install.sh << 'EOF'
          #!/bin/sh
          echo "安装Samba静态二进制文件..."
          cp smbd nmbd smbpasswd /usr/sbin/
          chmod 755 /usr/sbin/smbd /usr/sbin/nmbd /usr/sbin/smbpasswd
          echo "安装完成!"
          EOF
          
          chmod +x ../../samba-deploy/install.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: samba-armv7-static
          path: samba-deploy/*
          retention-days: 30
