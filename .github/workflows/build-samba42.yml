name: Build Samba Server for ARMv5

on:
  workflow_dispatch:

env:
  SAMBA_VERSION: "4.10.18"

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Install ARM toolchain and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-arm-linux-gnueabi \
          g++-arm-linux-gnueabi \
          binutils-arm-linux-gnueabi \
          wget \
          build-essential \
          pkg-config \
          libacl1-dev \
          libattr1-dev \
          libblkid-dev \
          libgnutls28-dev \
          libreadline-dev

    - name: Download Samba source
      run: |
        wget https://download.samba.org/pub/samba/stable/samba-$SAMBA_VERSION.tar.gz
        tar -xzf samba-$SAMBA_VERSION.tar.gz
        echo "SAMBA_SOURCE_DIR=samba-$SAMBA_VERSION" >> $GITHUB_ENV

    - name: Build Samba with static linking
      run: |
        cd $SAMBA_SOURCE_DIR
        
        # 设置静态编译环境
        export CC="arm-linux-gnueabi-gcc"
        export AR="arm-linux-gnueabi-ar"
        export CFLAGS="-Os -static"
        export LDFLAGS="-static"
        
        # 最简单的配置，避免所有可能出错的选项
        ./configure --host=arm-linux-gnueabi --prefix=/usr
        
        # 只编译服务器核心组件
        make -j$(nproc) bin/smbd || make -j1 bin/smbd
        make -j$(nproc) bin/nmbd || make -j1 bin/nmbd
        make -j$(nproc) bin/smbpasswd || make -j1 bin/smbpasswd

    - name: Verify and package binaries
      run: |
        # 检查编译结果
        echo "Build results:"
        ls -la $SAMBA_SOURCE_DIR/bin/smbd $SAMBA_SOURCE_DIR/bin/nmbd $SAMBA_SOURCE_DIR/bin/smbpasswd 2>/dev/null || true
        
        # 创建打包目录
        mkdir -p samba-server-armv5
        
        # 复制二进制文件
        if [ -f "$SAMBA_SOURCE_DIR/bin/smbd" ]; then
            cp $SAMBA_SOURCE_DIR/bin/smbd samba-server-armv5/
            echo "✓ smbd copied"
        fi
        
        if [ -f "$SAMBA_SOURCE_DIR/bin/nmbd" ]; then
            cp $SAMBA_SOURCE_DIR/bin/nmbd samba-server-armv5/
            echo "✓ nmbd copied"
        fi
        
        if [ -f "$SAMBA_SOURCE_DIR/bin/smbpasswd" ]; then
            cp $SAMBA_SOURCE_DIR/bin/smbpasswd samba-server-armv5/
            echo "✓ smbpasswd copied"
        fi
        
        # 检查文件信息
        echo "File information:"
        for bin in samba-server-armv5/*; do
            if [ -f "$bin" ]; then
                echo "$(basename $bin): $(file $bin)"
                # 检查是否是静态链接
                if arm-linux-gnueabi-objdump -p "$bin" | grep -q "DYNAMIC"; then
                    echo "  - Dynamic binary"
                else
                    echo "  - Static binary"
                fi
            fi
        done

        # 创建压缩包
        tar -czf samba-server-armv5-$SAMBA_VERSION.tar.gz samba-server-armv5/
        echo "Package created: samba-server-armv5-$SAMBA_VERSION.tar.gz"
        echo "Size: $(du -h samba-server-armv5-$SAMBA_VERSION.tar.gz | cut -f1)"

    - name: Upload binary package
      uses: actions/upload-artifact@v4
      with:
        name: samba-server-armv5-binaries
        path: samba-server-armv5-$SAMBA_VERSION.tar.gz
        retention-days: 7

    - name: Show build summary
      run: |
        echo "=== Build Summary ==="
        echo "Version: $SAMBA_VERSION"
        echo "Build method: ARM cross-compilation with static linking"
        if [ -f "samba-server-armv5-$SAMBA_VERSION.tar.gz" ]; then
            echo "Package: samba-server-armv5-$SAMBA_VERSION.tar.gz"
            echo "Size: $(du -h samba-server-armv5-$SAMBA_VERSION.tar.gz | cut -f1)"
            echo "Contents:"
            tar -tzf samba-server-armv5-$SAMBA_VERSION.tar.gz
        else
            echo "Build failed - no package created"
            exit 1
        fi
