name: Build Samba 4 for ARMv7 (Legacy GLIBC)

on:
  workflow_dispatch:

jobs:
  build-samba:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        run: |
          echo "===== 设置编译环境 ====="
          sudo apt update
          sudo apt install -y \
            build-essential \
            crossbuild-essential-armhf \
            gcc-arm-linux-gnueabihf \
            g++-arm-linux-gnueabihf \
            pkg-config \
            wget tar xz-utils make \
            python3 python3-dev \
            libssl-dev:armhf \
            zlib1g-dev:armhf

      - name: Check ARM toolchain
        run: |
          echo "===== 检查ARM工具链 ====="
          arm-linux-gnueabihf-gcc --version
          arm-linux-gnueabihf-gcc -dumpmachine

      - name: Build compatible GnuTLS (older version)
        run: |
          echo "===== 编译兼容的GnuTLS 3.6.x ====="
          # 使用更旧的GnuTLS版本以兼容您的系统glibc
          GNUTLS_VERSION="3.6.16"
          wget -q --show-progress "https://www.gnupg.org/ftp/gcrypt/gnutls/v3.6/gnutls-${GNUTLS_VERSION}.tar.xz"
          tar -xJf gnutls-${GNUTLS_VERSION}.tar.xz
          cd gnutls-${GNUTLS_VERSION}

          ./configure \
            --host=arm-linux-gnueabihf \
            --prefix=/opt/arm-gnutls \
            --disable-doc \
            --disable-tests \
            --enable-shared \
            --without-p11-kit \
            --with-included-libtasn1 \
            --with-included-unistring \
            CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os -U_FORTIFY_SOURCE" \
            LDFLAGS="-static-libgcc -Wl,-z,relro,-z,now"

          make -j$(nproc)
          sudo make install

      - name: Download Samba 4.9 (compatible version)
        run: |
          echo "===== 下载兼容的Samba 4.9版本 ====="
          # 使用较旧的Samba版本以确保兼容性
          SAMBA_VERSION="4.9.5"
          wget -q --show-progress "https://download.samba.org/pub/samba/stable/samba-${SAMBA_VERSION}.tar.gz"
          tar -xzf samba-${SAMBA_VERSION}.tar.gz
          cd samba-${SAMBA_VERSION}

      - name: Configure Samba for legacy system
        run: |
          echo "===== 配置Samba用于旧系统 ====="
          SAMBA_VERSION="4.9.5"
          cd samba-${SAMBA_VERSION}

          export PKG_CONFIG_PATH="/opt/arm-gnutls/lib/pkgconfig"
          export CC="arm-linux-gnueabihf-gcc"
          export CXX="arm-linux-gnueabihf-g++"
          export CFLAGS="-march=armv7-a -mfpu=neon -mfloat-abi=hard -Os -U_FORTIFY_SOURCE -D_GNU_SOURCE"
          export LDFLAGS="-L/opt/arm-gnutls/lib -Wl,-rpath,/opt/arm-gnutls/lib -static-libgcc"

          ./configure \
            --host=arm-linux-gnueabihf \
            --target=arm-linux-gnueabihf \
            --prefix=/usr \
            --sysconfdir=/etc/samba \
            --localstatedir=/var \
            --with-privatedir=/var/lib/samba/private \
            --disable-python \
            --without-ldap \
            --without-ad-dc \
            --without-systemd \
            --without-winbind \
            --with-gnutls=/opt/arm-gnutls \
            --enable-shared-libs \
            --disable-rpath \
            --disable-avahi \
            --disable-iprint \
            --disable-cups \
            --disable-glusterfs \
            --disable-json \
            --disable-libarchive \
            ac_cv_func_fstatfs=yes

      - name: Compile Samba
        run: |
          echo "===== 编译Samba ====="
          SAMBA_VERSION="4.9.5"
          cd samba-${SAMBA_VERSION}
          make -j$(nproc) all

      - name: Check binary compatibility
        run: |
          echo "===== 检查二进制兼容性 ====="
          SAMBA_VERSION="4.9.5"
          cd samba-${SAMBA_VERSION}/bin
          
          # 检查架构
          arm-linux-gnueabihf-readelf -h smbd | grep "Machine:" | grep "ARM" || exit 1
          
          # 检查动态库依赖
          echo "动态库依赖:"
          arm-linux-gnueabihf-readelf -d smbd | grep "Shared library"
          
          # 检查GLIBC版本要求
          echo "GLIBC版本要求:"
          arm-linux-gnueabihf-objdump -p smbd | grep -A10 "Version References" | grep GLIBC || echo "无GLIBC版本要求"

      - name: Create minimal installation package
        run: |
          echo "===== 创建最小安装包 ====="
          SAMBA_VERSION="4.9.5"
          mkdir -p samba-armv7-package
          cd samba-${SAMBA_VERSION}
          
          # 复制必要的二进制文件
          cp bin/smbd bin/nmbd bin/smbpasswd ../samba-armv7-package/
          
          # 复制配置文件示例
          mkdir -p ../samba-armv7-package/config
          cp examples/smb.conf.default ../samba-armv7-package/config/smb.conf.example
          
          # 创建安装脚本
          cat > ../samba-armv7-package/install.sh << 'EOF'
          #!/bin/sh
          echo "Installing Samba for ARMv7..."
          cp smbd nmbd smbpasswd /usr/sbin/
          chmod 755 /usr/sbin/smbd /usr/sbin/nmbd /usr/sbin/smbpasswd
          echo "Installation complete!"
          EOF
          
          chmod +x ../samba-armv7-package/install.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: samba4.9-armv7-legacy
          path: |
            samba-armv7-package/*
          retention-days: 30

      - name: Show build info
        run: |
          echo "===== 构建信息 ====="
          echo "目标系统: ARMv7 (glibc 2.1x compatible)"
          echo "Samba版本: 4.9.5"
          echo "GnuTLS版本: 3.6.16"
          echo "构建时间: $(date)"
          echo "适用于: Linux 4.1.x (Buildroot 2017)"
